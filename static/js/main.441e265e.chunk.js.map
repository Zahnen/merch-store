{"version":3,"sources":["components/Header.js","components/Item.js","components/ItemList.js","components/ReusableForm.js","components/NewItemForm.js","components/ItemDetail.js","components/EditItemForm.js","components/ItemControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","class","style","textAlign","letterSpacing","Item","props","onClick","whenItemClicked","id","src","imgUrl","width","alt","name","ItemList","itemList","map","item","onItemSelection","description","quantity","key","ReusableForm","onSubmit","formSubmissionHandler","type","placeholder","min","buttonText","NewItemForm","event","preventDefault","onNewItemCreation","target","value","parseInt","v4","ItemDetail","onClickingDelete","onClickingBuy","onClickingRestock","onClickingEdit","EditItemForm","onEditItem","ItemControl","handleAddingNewItemToList","newItem","newMasterItemList","state","masterItemList","concat","setState","formVisibleOnPage","handleChangingSelectedItem","selectedItem","filter","showFormOnClick","editing","prevState","handleEditClick","handleEditingItemInList","itemToEdit","editedMasterItemList","handleBuyClick","itemToBuy","Object","assign","handleRestockClick","handleDeletingItem","createNewItem","currentlyVisibleState","this","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.441e265e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <div class=\"jumbotron\">\r\n        <h1 style={{textAlign: 'center', letterSpacing: '5px'}}>Fake Band Merch Site</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Item(props) {\r\n  return (\r\n    <>\r\n      <div onClick = {() => props.whenItemClicked(props.id)}>  {/*arrow notation means function is not being involked on page load, waits for event */}\r\n        <img src={props.imgUrl} width=\"180px\" alt=\"Merch Item\"/>\r\n        <h3>{props.name}</h3>\r\n        {/* <p>{props.description}</p>\r\n        <p>Quantity: {props.quantity}</p> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  quantity: PropTypes.number.isRequired,\r\n  id: PropTypes.string, //nonlinear id generated from v4() --> 24-character id\r\n  whenItemClicked: PropTypes.func\r\n};\r\n\r\nexport default Item;","import React from \"react\";\r\nimport Item from \"./Item\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ItemList(props) {\r\n  return (\r\n    <>\r\n    <hr />\r\n    {props.itemList.map((item) =>\r\n      <Item\r\n      whenItemClicked = {props.onItemSelection} // a prop from TicketControl component, it is one of TicketList's props, hence the `props` not `item`\r\n      name={item.name}\r\n      imgUrl={item.imgUrl}\r\n      description={item.description}\r\n      quantity={item.quantity}\r\n      id={item.id} //for details, update, delete (?) b/c different parents\r\n      key={item.id} /> //for read all (?) b/c different parents\r\n    )}\r\n    </>\r\n  );\r\n}\r\n\r\nItemList.propTypes = {\r\n  itemList: PropTypes.array,\r\n  onItemSelection: PropTypes.func\r\n};\r\n\r\nexport default ItemList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ReusableForm(props) {\r\n  return (\r\n    <>\r\n    <form class=\"form-group\" style={{width: '36rem'}} onSubmit={props.formSubmissionHandler}>\r\n        <input class=\"form-control\"\r\n          type='text'\r\n          name='name'\r\n          placeholder='Item Name' />\r\n        <input class=\"form-control\"\r\n          type='text'\r\n          name='imgUrl'\r\n          placeholder='Image URL (ends in .png, .jpg, etc)' />\r\n        <input class=\"form-control\"\r\n          type='text'\r\n          name='description'\r\n          placeholder='Item Description' />\r\n        <input class=\"form-control\"\r\n          type='number'\r\n          min='0'\r\n          name='quantity'\r\n          placeholder='Quantity Available' />\r\n        <button type='submit' class=\"btn btn-info\">{props.buttonText}</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nReusableForm.propTypes = {\r\n  formSubmissionHandler: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n};\r\n\r\nexport default ReusableForm;","import React from 'react';\r\nimport { v4 } from 'uuid';\r\nimport PropTypes from \"prop-types\";\r\nimport ReusableForm from \"./ReusableForm\";\r\n\r\nfunction NewItemForm(props){\r\n\r\n  function handleNewItemFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onNewItemCreation({name: event.target.name.value, imgUrl: event.target.imgUrl.value, description: event.target.description.value, quantity: parseInt(event.target.quantity.value), id: v4()});\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <ReusableForm\r\n        formSubmissionHandler={handleNewItemFormSubmission}\r\n        buttonText=\"Submit\" />\r\n    </>\r\n  );\r\n}\r\n\r\nNewItemForm.propTypes = {\r\n  onNewItemCreation: PropTypes.func\r\n};\r\n\r\nexport default NewItemForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ItemDetail(props){\r\n  const { item, onClickingDelete, onClickingBuy } = props; //object destructuring to derive `ticket` obj from props\r\n  return (\r\n    <>\r\n      <h1>Item Detail:</h1>\r\n      <h2>{item.name}</h2>\r\n      <img src={item.imgUrl} width=\"180px\" alt=\"Merch Item\"/>\r\n      <h3><em>{item.description}</em></h3>\r\n      {item.quantity === 0 ?\r\n        <h3>Out of stock! Better luck next time.</h3>\r\n        : <h3>Quantity: {item.quantity}</h3>\r\n      }\r\n      {item.quantity > 0 ? <button onClick={ props.onClickingBuy } class=\"btn btn-success\"> Buy!</button> : null }\r\n      <button onClick={ props.onClickingRestock } class=\"btn btn-success\">Restock!</button>\r\n      <button onClick={ props.onClickingEdit } class=\"btn btn-info\">Update Item</button>\r\n      <button onClick = {() => onClickingDelete(item.id)} class=\"btn btn-danger\">Delete Item</button>\r\n      <hr/>\r\n    </>\r\n  );\r\n}\r\n\r\nItemDetail.propTypes = {\r\n  item: PropTypes.object,\r\n  onClickingDelete: PropTypes.func,\r\n  onClickingEdit: PropTypes.func,\r\n  onClickingBuy: PropTypes.func\r\n}\r\n\r\nexport default ItemDetail;\r\n\r\n\r\n// ternary instructions ...\r\n// // {condition ? true : false}\r\n// // {condition ? true : (condition ? (condition ? true : false) : false)}\r\n\r\n// 2nd ternary option ...\r\n// {item.quantity === 0 &&\r\n//   <h3>\r\n//     Out of stock! Better luck next time.\r\n//   </h3>\r\n// }\r\n// {item.quantity > 0 &&\r\n//   <h3>\r\n//     Quantity: {item.quantity}\r\n//   </h3>\r\n// }","import React from 'react';\r\nimport ReusableForm from './ReusableForm';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction EditItemForm (props) {\r\n  const { item } = props;\r\n\r\n  function handleEditItemFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onEditItem({\r\n      name: event.target.name.value,\r\n      imgUrl: event.target.imgUrl.value,\r\n      description: event.target.description.value,\r\n      quantity: parseInt(event.target.quantity.value),\r\n      id: item.id});\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ReusableForm\r\n        formSubmissionHandler={handleEditItemFormSubmission}\r\n        buttonText=\"Update Item\" />\r\n    </>\r\n  );\r\n}\r\n\r\nEditItemForm.propTypes = {\r\n  item: PropTypes.object,\r\n  onEditItem: PropTypes.func\r\n};\r\n\r\nexport default EditItemForm;","import React from \"react\";\r\n// import Item from \"./Item\";\r\nimport ItemList from \"./ItemList\";\r\nimport NewItemForm from \"./NewItemForm\";\r\nimport ItemDetail from \"./ItemDetail\";\r\nimport EditItemForm from './EditItemForm';\r\n\r\nclass ItemControl extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formVisibleOnPage: false, //boolean to show if form is visible or not\r\n      createNewItem: false, // do we need this?\r\n      masterItemList: [], // master list of all item objects to display and render\r\n      selectedItem: null, // holds an Item object to display details of a specific item\r\n      editing: false\r\n    };\r\n  }\r\n\r\n  //Create\r\n  handleAddingNewItemToList = (newItem) => {\r\n    const newMasterItemList = this.state.masterItemList.concat(newItem);\r\n    this.setState({\r\n      masterItemList: newMasterItemList,\r\n      formVisibleOnPage: false\r\n    });\r\n  }\r\n\r\n  //Read - Details\r\n  handleChangingSelectedItem = (id) => {\r\n    const selectedItem = this.state.masterItemList.filter(item => item.id === id)[0];\r\n    this.setState({selectedItem: selectedItem});\r\n  }\r\n\r\n  //Toggle btw list and form\r\n  showFormOnClick = () => { //change name\r\n    if (this.state.selectedItem != null) {\r\n      this.setState({\r\n        formVisibleOnPage: false,\r\n        selectedItem: null,\r\n        editing: false\r\n      });\r\n    } else {\r\n      this.setState(prevState => ({\r\n        formVisibleOnPage: !prevState.formVisibleOnPage\r\n      }));\r\n    }\r\n  }\r\n\r\n  //Edit functions\r\n  handleEditClick = () => {\r\n    this.setState({editing: true});\r\n  }\r\n\r\n  handleEditingItemInList = (itemToEdit) => {\r\n    const editedMasterItemList = this.state.masterItemList\r\n      .filter(item => item.id !== this.state.selectedItem.id)\r\n      .concat(itemToEdit);\r\n    this.setState({\r\n      masterItemList: editedMasterItemList,\r\n      editing: false,\r\n      selectedItem: itemToEdit //this is needed for updating\r\n      // selectedItem: null //add this back in to redirect back to main pg\r\n    });\r\n  }\r\n\r\n  handleBuyClick = () => {\r\n    const selectedItem = this.state.selectedItem;\r\n    const itemToBuy = Object.assign({}, selectedItem, {quantity: selectedItem.quantity - 1});\r\n    const editedMasterItemList = this.state.masterItemList\r\n      .filter(item => item.id !== this.state.selectedItem.id)\r\n      .concat(itemToBuy);\r\n    this.setState({\r\n      masterItemList: editedMasterItemList,\r\n      selectedItem: itemToBuy\r\n    });\r\n  }\r\n\r\n  handleRestockClick = () => {\r\n    const selectedItem = this.state.selectedItem;\r\n    const itemToBuy = Object.assign({}, selectedItem, {quantity: selectedItem.quantity + 1});\r\n    const editedMasterItemList = this.state.masterItemList\r\n      .filter(item => item.id !== this.state.selectedItem.id)\r\n      .concat(itemToBuy);\r\n    this.setState({\r\n      masterItemList: editedMasterItemList,\r\n      selectedItem: itemToBuy\r\n    });\r\n  }\r\n\r\n  //Delete item\r\n  handleDeletingItem = (id) => {\r\n    const newMasterItemList = this.state.masterItemList.filter(item => item.id !== id);\r\n    this.setState({\r\n      masterItemList: newMasterItemList,\r\n      selectedItem: null\r\n    });\r\n  }\r\n\r\n  render(){\r\n    let buttonText = null;\r\n    let currentlyVisibleState = null;\r\n\r\n    if (this.state.editing){\r\n      currentlyVisibleState = <EditItemForm item = {this.state.selectedItem} onEditItem = {this.handleEditingItemInList} />\r\n      buttonText = \"Return to Item List\"\r\n    } else if (this.state.selectedItem != null) {\r\n      currentlyVisibleState =\r\n      <ItemDetail\r\n        item = {this.state.selectedItem}\r\n        onClickingDelete = {this.handleDeletingItem}\r\n        onClickingBuy = {this.handleBuyClick}\r\n        onClickingRestock = {this.handleRestockClick}\r\n        onClickingEdit = {this.handleEditClick} />;\r\n      buttonText = \"Return to Item List\";\r\n    } else if (this.state.formVisibleOnPage) { // if on new form, show form and link to list\r\n      currentlyVisibleState = <NewItemForm onNewItemCreation={this.handleAddingNewItemToList} />;\r\n      buttonText = \"Return to Item List\";\r\n    } else { // if on master list, show link to \"add new\" form\r\n      currentlyVisibleState = <ItemList itemList={this.state.masterItemList} onItemSelection={this.handleChangingSelectedItem} />;\r\n      buttonText = \"Add New Item\";\r\n    }\r\n    return (\r\n      <>\r\n      {currentlyVisibleState}\r\n      <button class=\"btn btn-info\" onClick={this.showFormOnClick}>{buttonText}</button>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ItemControl;","import React from 'react';\r\nimport Header from './Header';\r\n// import NewItemForm from './NewItemForm';\r\nimport ItemControl from './ItemControl';\r\n\r\nfunction App(){\r\n  return (\r\n    <>\r\n      <div class=\"container\">\r\n        <Header />\r\n        <ItemControl />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}